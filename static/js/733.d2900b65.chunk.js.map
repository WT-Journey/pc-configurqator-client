{"version":3,"file":"static/js/733.d2900b65.chunk.js","mappings":"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","sources":["ironVueComponents/VueCPU.js","Modal/ModalCPU.js"],"sourcesContent":["import \"../components/components.css\"\n\nexport default function VueCPU({items, parentCallback}) {\n\n    function handlerItem(event) {\n        parentCallback(event)\n    }\n\n    return (\n        \n      <div>\n            {\n                items?.map(item => {\n                    return(\n                    <div key={item.id} className='wrapperIron'>\n                        <div className='leftBlock'>                       \n                            <img src={item.img} alt=\"\" className='cardImg'/>\n                            <div>\n                                <h1>{item.name}</h1>\n                                <div>\n                                    <p>{item.socket}, ядра: {item.core_number}, споживання: {item.tdp} Ватт, {item.socket}</p>\n                                </div>\n                            </div>\n                        </div>\n                        <div>\n                            <h2>{item.price}</h2>\n                            <button onClick={() => handlerItem(item)}>Додати</button>\n                        </div> \n                    </div>\n                    )\n                })\n            }\n      </div>\n    )\n}\n","import { useState, useEffect, useCallback } from 'react';\nimport VueCPU from '../ironVueComponents/VueCPU';\nimport \"./modalCPU.css\"\n\nconst ModalCPU = ({active, setActive, items, parentCallback, isLoading}) => {\n\n    const [check, setCheck] = useState(0);\n    const [filteredItems, setFilteredItems] = useState(items);\n\n    const [minPrice, setMinPrice] = useState(0)\n    const [maxPrice, setMaxPrice] = useState(300000)\n\n    const [selectedFiltersSocket, setSelectedFiltersSocket] = useState([]);\n    const [selectedFiltersCores, setSelectedFiltersCores] = useState([]);\n    \n    const getCpu = useCallback(async()=> {\n        const response = await fetch(\n          'http://localhost:8080/cpu',\n          {\n            method: 'POST',\n            headers:{\n              \"Content-Type\":'application/json'\n            },\n            body: JSON.stringify({\n              \"Price\": [Number(minPrice),Number(maxPrice)],\n              \"Socket\": selectedFiltersSocket.length !== 0 ? selectedFiltersSocket : \"\",\n              \"Core_number\": selectedFiltersCores.length !== 0 ? selectedFiltersCores : \"\",\n            })\n    \n          }\n        )\n        const jsonData = await response.json()\n        return jsonData.Page_data\n    }, [minPrice, maxPrice, selectedFiltersSocket, selectedFiltersCores]);\n\n    useEffect(() => {\n        // Всередині цієї функції ви можете викликати вашу асинхронну функцію\n        if (check !== 5){\n        async function fetchData() {\n          try {\n            const response123 = await getCpu();\n            setFilteredItems(response123); // Встановлюємо отримані дані у стан\n          } catch (error) {\n            console.error('Помилка при завантаженні даних:', error);\n          }\n        }\n        fetchData();\n        setCheck(c => c + 1)\n        }\n        // console.log(filteredItems)\n    }, [check, getCpu]); \n\n    useEffect(() => {\n        // Всередині цієї функції ви можете викликати вашу асинхронну функцію\n        async function fetchData() {\n          try {\n            const response1 = await getCpu();\n            setFilteredItems(response1); // Встановлюємо отримані дані у стан\n          } catch (error) {\n            console.error('Помилка при завантаженні даних:', error);\n          }\n        }\n    \n        fetchData();\n    }, [getCpu, isLoading]); \n\n    const handleFilterButtonClickCores = (selectedCategory) => {\n        if (selectedFiltersCores.includes(selectedCategory)) {\n          let filters = selectedFiltersCores.filter((el) => el !== selectedCategory);\n          setSelectedFiltersCores(filters);\n        } else {\n          setSelectedFiltersCores([...selectedFiltersCores, selectedCategory]);\n        }\n    };\n\n    const handleFilterButtonClickSocket = (selectedCategory) => {\n        if (selectedFiltersSocket.includes(selectedCategory)) {\n          let filters = selectedFiltersSocket.filter((el) => el !== selectedCategory);\n          setSelectedFiltersSocket(filters);\n        } else {\n          setSelectedFiltersSocket([...selectedFiltersSocket, selectedCategory]);\n        }\n    };\n\n    return (\n        <div className={active ? \"modal active\" : \"modal\"} onClick={() => setActive(false)}>\n            <div className={active ? \"modal__content active\" : \"modal__content\"} onClick={e => e.stopPropagation()}>\n                <form className=\"filters-scroll\">\n                    <p>Вартість</p>\n                    <div className='price'>\n                      <input \n                        type=\"number\"\n                        value={minPrice}\n                        onChange={e => setMinPrice(e.target.value)}\n                      />\n                      <input \n                        type=\"number\"\n                        value={maxPrice}\n                        onChange={e => setMaxPrice(e.target.value)}\n                      />      \n                    </div>  \n                        <div>\n                            <p>Кількість ядер</p>\n                            <div>\n                                <input \n                                    type=\"checkbox\"\n                                    id=\"core-2\"\n                                    name=\"2\"\n                                    onChange={() => handleFilterButtonClickCores(2)}\n                                />\n                                <label htmlFor=\"core-2\">2</label>\n                            </div>\n                            <div>\n                                <input \n                                    type=\"checkbox\"\n                                    id=\"core-4\"\n                                    name=\"4\"\n                                    onChange={() => handleFilterButtonClickCores(4)}\n                                />\n                                <label htmlFor=\"core-4\">4</label>\n                            </div>\n                            <div>\n                                <input \n                                    type=\"checkbox\"\n                                    id=\"core-6\"\n                                    name=\"6\"\n                                    onChange={() => handleFilterButtonClickCores(6)}\n                                />\n                                <label htmlFor=\"core-6\">6</label>\n                            </div>\n                            <div>\n                                <input \n                                    type=\"checkbox\"\n                                    id=\"core-8\"\n                                    name=\"8\"\n                                    onChange={() => handleFilterButtonClickCores(8)}\n                                />\n                                <label htmlFor=\"core-8\">8</label>\n                            </div>\n                            <div>\n                                <input \n                                    type=\"checkbox\"\n                                    id=\"core-10\"\n                                    name=\"10\"\n                                    onChange={() => handleFilterButtonClickCores(10)}\n                                />\n                                <label htmlFor=\"core-10\">10</label>\n                            </div>\n                            <div>\n                                <input \n                                    type=\"checkbox\"\n                                    id=\"core-12\"\n                                    name=\"12\"\n                                    onChange={() => handleFilterButtonClickCores(12)}\n                                />\n                                <label htmlFor=\"core-12\">12</label>\n                            </div>\n                            <div>\n                                <input \n                                    type=\"checkbox\"\n                                    id=\"core-16\"\n                                    name=\"16\"\n                                    onChange={() => handleFilterButtonClickCores(16)}\n                                />\n                                <label htmlFor=\"core-16\">16</label>\n                            </div>\n                            <div>\n                                <input \n                                    type=\"checkbox\"\n                                    id=\"core-24\"\n                                    name=\"24\"\n                                    onChange={() => handleFilterButtonClickCores(24)}\n                                />\n                                <label htmlFor=\"core-24\">24</label>\n                            </div>\n                        </div>\n                        <div>\n                            <p>Сокет</p>\n                            <div>\n                                <input \n                                    type=\"checkbox\"\n                                    name=\"LGA1700\"\n                                    id=\"LGA1700\"\n                                    onChange={() => handleFilterButtonClickSocket(\"LGA1700\")}\n                                />\n                                <label htmlFor=\"LGA1700\">LGA1700</label>\n                            </div>\n                            <div>\n                                <input \n                                    type=\"checkbox\"\n                                    id=\"LGA1151\"\n                                    name=\"LGA1151\"\n                                    onChange={() => handleFilterButtonClickSocket(\"LGA1151\")}\n                                />\n                                <label htmlFor=\"LGA1151\">LGA1151</label>\n                            </div>\n                            <div>\n                                <input \n                                    type=\"checkbox\"\n                                    id=\"LGA1200\"\n                                    name=\"LGA1200\"\n                                    onChange={() => handleFilterButtonClickSocket(\"LGA1200\")}\n                                />\n                                <label htmlFor=\"LGA1200\">LGA1200</label>\n                            </div>\n                            <div>\n                                <input \n                                    type=\"checkbox\"\n                                    id=\"AM4\"\n                                    name=\"AM4\"\n                                    onChange={() => handleFilterButtonClickSocket(\"AM4\")}\n                                />\n                                <label htmlFor=\"AM4\">AM4</label>\n                            </div>\n                            <div>\n                                <input \n                                    type=\"checkbox\"\n                                    id=\"AM3+\"\n                                    name=\"AM3+\"\n                                    onChange={() => handleFilterButtonClickSocket(\"AM3+\")}\n                                />\n                                <label htmlFor=\"AM3+\">AM3+</label>\n                            </div>\n                            <div>\n                                <input \n                                    type=\"checkbox\"\n                                    id=\"AM5\"\n                                    name=\"AM5\"\n                                    onChange={() => handleFilterButtonClickSocket(\"AM5\")}\n                                />\n                                <label htmlFor=\"AM5\">AM5</label>\n                            </div>\n                        </div>\n                </form>\n                <div className='scroll'>\n                    <VueCPU items={filteredItems} parentCallback={parentCallback} itemType={\"CPU\"}/>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ModalCPU;"],"names":["VueCPU","_ref","items","parentCallback","_jsx","children","map","item","_jsxs","className","src","img","alt","name","socket","core_number","tdp","price","onClick","id","active","setActive","isLoading","check","setCheck","useState","filteredItems","setFilteredItems","minPrice","setMinPrice","maxPrice","setMaxPrice","selectedFiltersSocket","setSelectedFiltersSocket","selectedFiltersCores","setSelectedFiltersCores","getCpu","useCallback","async","response","fetch","method","headers","body","JSON","stringify","Number","length","json","Page_data","useEffect","fetchData","response123","error","console","c","response1","handleFilterButtonClickCores","selectedCategory","includes","filters","filter","el","handleFilterButtonClickSocket","e","stopPropagation","type","value","onChange","target","htmlFor","itemType"],"sourceRoot":""}