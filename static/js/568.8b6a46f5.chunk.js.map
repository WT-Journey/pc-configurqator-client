{"version":3,"file":"static/js/568.8b6a46f5.chunk.js","mappings":"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","sources":["ironVueComponents/VueMother.js","Modal/ModalMother.js"],"sourcesContent":["import \"../components/components.css\"\n\nexport default function VueMother({items, parentCallback}) {\n\n    function handlerItem(event) {\n        parentCallback(event)\n    }\n\n    return (\n        \n      <div>\n            {\n                items?.map(item => {\n                    return(\n                    <div key={item.id} className='wrapperIron'>\n                        <div className='leftBlock'>                       \n                            <img src={item.img} alt=\"\" className='cardImg'/>\n                            <div>\n                                <h1>{item.name}</h1>\n                                <div>\n                                    <p>{item.chipset}, {item.form_factor}, {item.memory_type}, {item.socket}</p>\n                                </div>\n                            </div>\n                        </div>\n                        <div>\n                            <h2>{item.price}</h2>\n                            <button onClick={() => handlerItem(item)}>Додати</button>\n                        </div> \n                    </div>\n                    )\n                })\n            }\n      </div>\n    )\n}\n","import { useState, useEffect, useCallback } from 'react';\nimport VueMother from '../ironVueComponents/VueMother';\nimport \"./modalMother.css\"\n\nconst ModalMother = ({active, setActive, items, parentCallback, isLoading}) => {\n\n    const [check, setCheck] = useState(0);\n\n    const [filteredItems, setFilteredItems] = useState(items);\n    // console.log(items)\n    const [minPrice, setMinPrice] = useState(0)\n    const [maxPrice, setMaxPrice] = useState(300000)\n\n    const [selectedFiltersSocket, setSelectedFiltersSocket] = useState([]);\n    const [selectedFiltersForm, setSelectedFiltersForm] = useState([]);\n    const [selectedFiltersMemory, setSelectedFiltersMemory] = useState([]);\n    const [selectedFiltersChip, setSelectedFiltersChip] = useState([]);\n\n    const getMotherBoard = useCallback(async()=> {\n        const response = await fetch(\n          'http://localhost:8080/motherboard',\n          {\n            method: 'POST',\n            headers:{\n              \"Content-Type\":'application/json'\n            },\n            body: JSON.stringify({\n              \"Price\": [Number(minPrice),Number(maxPrice)],\n              \"Chipset\": selectedFiltersChip.length !== 0 ? selectedFiltersChip : \"\",\n              \"Memory_type\": selectedFiltersMemory.length !== 0 ? selectedFiltersMemory : \"\",\n              \"Socket\": selectedFiltersSocket.length !== 0 ? selectedFiltersSocket : \"\",\n              \"Form_factor\": selectedFiltersForm.length !== 0 ? selectedFiltersForm : \"\"\n            })                   \n          }\n        )\n        const jsonData = await response.json()\n        return jsonData.Page_data\n      }, [selectedFiltersSocket, selectedFiltersForm, selectedFiltersMemory, selectedFiltersChip, minPrice, maxPrice]);\n\n    useEffect(() => {\n        // Всередині цієї функції ви можете викликати вашу асинхронну функцію\n        if (check !== 10){\n        async function fetchData() {\n          try {\n            const response123 = await getMotherBoard();\n            setFilteredItems(response123); // Встановлюємо отримані дані у стан\n          } catch (error) {\n            console.error('Помилка при завантаженні даних:', error);\n          }\n        }\n        fetchData();\n        setCheck(c => c + 1)\n        }\n        // console.log(filteredItems)\n    }, [check, getMotherBoard]); \n    \n    useEffect(() => {\n        // Всередині цієї функції ви можете викликати вашу асинхронну функцію\n        async function fetchData() {\n          try {\n            const response123 = await getMotherBoard();\n            setFilteredItems(response123); // Встановлюємо отримані дані у стан\n          } catch (error) {\n            console.error('Помилка при завантаженні даних:', error);\n          }\n        }\n        fetchData();\n        // console.log(filteredItems)\n    }, [getMotherBoard, isLoading]); \n\n\n    const handleFilterButtonClickChip = (selectedCategory) => {\n        if (selectedFiltersChip.includes(selectedCategory)) {\n          let filters = selectedFiltersChip.filter((el) => el !== selectedCategory);\n          setSelectedFiltersChip(filters);\n        } else {\n          setSelectedFiltersChip([...selectedFiltersChip, selectedCategory]);\n        }\n    };\n\n    const handleFilterButtonClickSocket = (selectedCategory) => {\n        if (selectedFiltersSocket.includes(selectedCategory)) {\n          let filters = selectedFiltersSocket.filter((el) => el !== selectedCategory);\n          setSelectedFiltersSocket(filters);\n        } else {\n          setSelectedFiltersSocket([...selectedFiltersSocket, selectedCategory]);\n        }\n    };\n\n    const handleFilterButtonClickMemory = (selectedCategory) => {\n        if (selectedFiltersMemory.includes(selectedCategory)) {\n          let filters = selectedFiltersMemory.filter((el) => el !== selectedCategory);\n          setSelectedFiltersMemory(filters);\n        } else {\n          setSelectedFiltersMemory([...selectedFiltersMemory, selectedCategory]);\n        }\n    };\n\n    const handleFilterButtonClickForm = (selectedCategory) => {\n        if (selectedFiltersForm.includes(selectedCategory)) {\n          let filters = selectedFiltersForm.filter((el) => el !== selectedCategory);\n          setSelectedFiltersForm(filters);\n        } else {\n          setSelectedFiltersForm([...selectedFiltersForm, selectedCategory]);\n        }\n    };\n\n    return (\n        <div className={active ? \"modal active\" : \"modal\"} onClick={() => setActive(false)}>\n            <div className={active ? \"modal__content active\" : \"modal__content\"} onClick={e => e.stopPropagation()}>\n                    <form className='filters-scroll'>\n                        <p>Вартість</p>\n                        <div className='price'>\n                            <input \n                                type=\"number\"\n                                value={minPrice}\n                                onChange={e => setMinPrice(e.target.value)}\n                            />\n                            <input \n                                type=\"number\"\n                                value={maxPrice}\n                                onChange={e => setMaxPrice(e.target.value)}\n                            />      \n                        </div>     \n                        <div>\n                            <p>Чіпсет</p>\n                            <div>\n                                <input \n                                    type=\"checkbox\"\n                                    id=\"AMD_B550\"\n                                    name=\"AMD B550\"\n                                    onChange={() => handleFilterButtonClickChip(\"AMD B550\")}\n                                />\n                                <label htmlFor=\"AMD_B550\">AMD B550</label>\n                            </div>\n                            <div>\n                                <input \n                                    type=\"checkbox\"\n                                    id=\"Intel_B760\"\n                                    name=\"Intel B760\"\n                                    onChange={() => handleFilterButtonClickChip(\"Intel B760\")}\n                                />\n                                <label htmlFor=\"Intel_B760\">Intel B760</label>\n                            </div>\n                            <div>\n                                <input \n                                    type=\"checkbox\"\n                                    id=\"AMD_A520\"\n                                    name=\"AMD A520\"\n                                    onChange={() => handleFilterButtonClickChip(\"AMD A520\")}\n                                />\n                                <label htmlFor=\"AMD_A520\">AMD A520</label>\n                            </div>\n                            <div>\n                                <input \n                                    type=\"checkbox\"\n                                    id=\"AMD_B650\"\n                                    name=\"AMD B650\"\n                                    onChange={() => handleFilterButtonClickChip(\"AMD B650\")}\n                                />\n                                <label htmlFor=\"AMD_B650\">AMD B650</label>\n                            </div>\n                            <div>\n                                <input \n                                    type=\"checkbox\"\n                                    id=\"Intel_Z790\"\n                                    name=\"Intel Z790\"\n                                    onChange={() => handleFilterButtonClickChip(\"Intel Z790\")}\n                                />\n                                <label htmlFor=\"Intel_Z790\">Intel Z790</label>\n                            </div>\n                            <div>\n                                <input \n                                    type=\"checkbox\"\n                                    id=\"Intel_B560\"\n                                    name=\"Intel B560\"\n                                    onChange={() => handleFilterButtonClickChip(\"Intel B560\")}\n                                />\n                                <label htmlFor=\"Intel_B560\">Intel B560</label>\n                            </div>\n                            <div>\n                                <input \n                                    type=\"checkbox\"\n                                    id=\"Intel_H310\"\n                                    name=\"Intel H310\"\n                                    onChange={() => handleFilterButtonClickChip(\"Intel H310\")}\n                                />\n                                <label htmlFor=\"Intel_H310\">Intel H310</label>\n                            </div>\n                            <div>\n                                <input \n                                    type=\"checkbox\"\n                                    id=\"Intel_H470\"\n                                    name=\"Intel H470\"\n                                    onChange={() => handleFilterButtonClickChip(\"Intel H470\")}\n                                />\n                                <label htmlFor=\"Intel_H470\">Intel H470</label>\n                            </div>\n                            <div>\n                                <input \n                                    type=\"checkbox\"\n                                    id=\"AMD_A320\"\n                                    name=\"AMD A320\"\n                                    onChange={() => handleFilterButtonClickChip(\"AMD A320\")}\n                                />\n                                <label htmlFor=\"AMD_A320\">AMD A320</label>\n                            </div>\n                            <div>\n                                <input \n                                    type=\"checkbox\"\n                                    id=\"Intel_H670\"\n                                    name=\"Intel H670\"\n                                    onChange={() => handleFilterButtonClickChip(\"Intel H670\")}\n                                />\n                                <label htmlFor=\"Intel_H670\">Intel H670</label>\n                            </div>\n                            <div>\n                                <input \n                                    type=\"checkbox\"\n                                    id=\"AMD_B450\"\n                                    name=\"AMD B450\"\n                                    onChange={() => handleFilterButtonClickChip(\"AMD B450\")}\n                                />\n                                <label htmlFor=\"AMD_B450\">AMD B450</label>\n                            </div>\n                            <div>\n                                <input \n                                    type=\"checkbox\"\n                                    id=\"Intel_H610\"\n                                    name=\"Intel H610\"\n                                    onChange={() => handleFilterButtonClickChip(\"Intel H610\")}\n                                />\n                                <label htmlFor=\"Intel_H610\">Intel H610</label>\n                            </div>\n                            <div>\n                                <input \n                                    type=\"checkbox\"\n                                    id=\"Intel_B660\"\n                                    name=\"Intel B660\"\n                                    onChange={() => handleFilterButtonClickChip(\"Intel B660\")}\n                                />\n                                <label htmlFor=\"Intel_B660\">Intel B660</label>\n                            </div>\n                            <div>\n                                <input \n                                    type=\"checkbox\"\n                                    id=\"Intel_Z590\"\n                                    name=\"Intel Z590\"\n                                    onChange={() => handleFilterButtonClickChip(\"Intel Z590\")}\n                                />\n                                <label htmlFor=\"Intel_Z590\">Intel Z590</label>\n                            </div>\n                            <div>\n                                <input \n                                    type=\"checkbox\"\n                                    id=\"Intel_H510\"\n                                    name=\"Intel H510\"\n                                    onChange={() => handleFilterButtonClickChip(\"Intel H510\")}\n                                />\n                                <label htmlFor=\"Intel_H510\">Intel H510</label>\n                            </div>\n                            <div>\n                                <input \n                                    type=\"checkbox\"\n                                    id=\"Intel_Z690\"\n                                    name=\"Intel Z690\"\n                                    onChange={() => handleFilterButtonClickChip(\"Intel Z690\")}\n                                />\n                                <label htmlFor=\"Intel_Z690\">Intel Z690</label>\n                            </div>\n                            <div>\n                                <input \n                                    type=\"checkbox\"\n                                    id=\"Intel_H410\"\n                                    name=\"Intel H410\"\n                                    onChange={() => handleFilterButtonClickChip(\"Intel H410\")}\n                                />\n                                <label htmlFor=\"Intel_H410\">Intel H410</label>\n                            </div>\n                        </div>\n                        <div>\n                            <p>Підтримуючий тип памʼяті:</p>\n                            <div>\n                                <input \n                                    type=\"checkbox\"\n                                    id=\"DDR3\"\n                                    name=\"DDR3\"\n                                    onChange={() => handleFilterButtonClickMemory(\"DDR3\")} \n                                />\n                                <label htmlFor=\"DDR3\">DDR3</label>\n                            </div>\n                            <div>\n                                <input \n                                    type=\"checkbox\"\n                                    id=\"DDR4\"\n                                    name=\"DDR4\"\n                                    onChange={() => handleFilterButtonClickMemory(\"DDR4\")} \n                                />\n                                <label htmlFor=\"DDR4\">DDR4</label>\n                            </div>\n                            <div>\n                                <input \n                                    type=\"checkbox\"\n                                    id=\"DDR5\"\n                                    name=\"DDR5\"\n                                    onChange={() => handleFilterButtonClickMemory(\"DDR5\")} \n                                />\n                                <label htmlFor=\"DDR5\">DDR5</label>\n                            </div>\n                        </div>\n                        <div>\n                            <p>Форм-фактор:</p>\n                            <div>\n                                <input \n                                    type=\"checkbox\"\n                                    id=\"ATX\"\n                                    name=\"ATX\"\n                                    onChange={() => handleFilterButtonClickForm(\"ATX\")}\n                                />\n                                <label htmlFor=\"ATX\">ATX</label>\n                            </div>\n                            <div>\n                                <input \n                                    type=\"checkbox\"\n                                    id=\"microATX\"\n                                    name=\"microATX\"\n                                    onChange={() => handleFilterButtonClickForm(\"microATX\")}\n                                />\n                                <label htmlFor=\"microATX\">microATX</label>\n                            </div>\n                            <div>\n                                <input \n                                    type=\"checkbox\"\n                                    id=\"Mini-ITX\"\n                                    name=\"Mini-ITX\"\n                                    onChange={() => handleFilterButtonClickForm(\"Mini-ITX\")}\n\n                                />\n                                <label htmlFor=\"Mini-ITX\">Mini-ITX</label>\n                            </div>\n                        </div>\n                        <div>\n                            <p>Сокет</p>\n                            <div>\n                                <input \n                                    type=\"checkbox\"\n                                    id=\"LGA1700\"\n                                    name=\"LGA1700\"\n                                    onChange={() => handleFilterButtonClickSocket(\"LGA1700\")}\n                                />\n                                <label htmlFor=\"LGA1700\">LGA1700</label>\n                            </div>\n                            <div>\n                                <input \n                                    type=\"checkbox\"\n                                    id=\"LGA1151\"\n                                    name=\"LGA1151\"\n                                    onChange={() => handleFilterButtonClickSocket(\"LGA1151\")}\n                                />\n                                <label htmlFor=\"LGA1151\">LGA1151</label>\n                            </div>\n                            <div>\n                                <input \n                                    type=\"checkbox\"\n                                    id=\"LGA1200\"\n                                    name=\"LGA1200\"\n                                    onChange={() => handleFilterButtonClickSocket(\"LGA1200\")}\n                                />\n                                <label htmlFor=\"LGA1200\">LGA1200</label>\n                            </div>\n                            <div>\n                                <input \n                                    type=\"checkbox\"\n                                    id=\"AM4\"\n                                    name=\"AM4\"\n                                    onChange={() => handleFilterButtonClickSocket(\"AM4\")}\n                                />\n                                <label htmlFor=\"AM4\">AM4</label>\n                            </div>\n                            <div>\n                                <input \n                                    type=\"checkbox\"\n                                    id=\"AM3+\"\n                                    name=\"AM3+\"\n                                    onChange={() => handleFilterButtonClickSocket(\"AM3+\")}\n                                />\n                                <label htmlFor=\"AM3+\">AM3+</label>\n                            </div>\n                            <div>\n                                <input \n                                    type=\"checkbox\"\n                                    id=\"AM5\"\n                                    name=\"AM5\"\n                                    onChange={() => handleFilterButtonClickSocket(\"AM5\")}\n                                />\n                                <label htmlFor=\"AM5\">AM5</label>\n                            </div>\n                        </div>\n                    </form>\n                <div>\n                    <div className='scroll'>\n                        <VueMother items={filteredItems} parentCallback={parentCallback}/>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ModalMother;"],"names":["VueMother","_ref","items","parentCallback","_jsx","children","map","item","_jsxs","className","src","img","alt","name","chipset","form_factor","memory_type","socket","price","onClick","id","active","setActive","isLoading","check","setCheck","useState","filteredItems","setFilteredItems","minPrice","setMinPrice","maxPrice","setMaxPrice","selectedFiltersSocket","setSelectedFiltersSocket","selectedFiltersForm","setSelectedFiltersForm","selectedFiltersMemory","setSelectedFiltersMemory","selectedFiltersChip","setSelectedFiltersChip","getMotherBoard","useCallback","async","response","fetch","method","headers","body","JSON","stringify","Number","length","json","Page_data","useEffect","fetchData","response123","error","console","c","handleFilterButtonClickChip","selectedCategory","includes","filters","filter","el","handleFilterButtonClickSocket","handleFilterButtonClickMemory","handleFilterButtonClickForm","e","stopPropagation","type","value","onChange","target","htmlFor"],"sourceRoot":""}