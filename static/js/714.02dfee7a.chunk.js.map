{"version":3,"file":"static/js/714.02dfee7a.chunk.js","mappings":"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","sources":["ironVueComponents/VueGPU.js","Modal/ModalGPU.js"],"sourcesContent":["import \"../components/components.css\"\n\nexport default function VueGPU({items, parentCallback}) {\n\n    function handlerItem(event) {\n        parentCallback(event)\n    }\n\n    return (\n        \n      <div>\n            {\n                items?.map(item => {\n                    return(\n                    <div key={item.id} className='wrapperIron'>\n                        <div className='leftBlock'>                       \n                            <img src={item.img} alt=\"\" className='cardImg'/>\n                            <div>\n                                <h1>{item.name}</h1>\n                                <div>\n                                    <p>тип памʼяті: {item.videomemory_type}, споживання: {item.power} Ватт</p>\n                                </div>\n                            </div>\n                        </div>\n                        <div>\n                            <h2>{item.price}</h2>\n                            <button onClick={() => handlerItem(item)}>Додати</button>\n                        </div> \n                    </div>\n                    )\n                })\n            }\n      </div>\n    )\n}\n","import { useState, useEffect, useCallback } from 'react';\nimport VueGPU from '../ironVueComponents/VueGPU';\nimport \"./modalGPU.css\"\n\nconst ModalGPU = ({active, setActive, items, parentCallback, isLoading}) => {\n\n    const [check, setCheck] = useState(0);\n\n    const [minPrice, setMinPrice] = useState(0)\n    const [maxPrice, setMaxPrice] = useState(300000)\n    const [selectedFilters, setSelectedFilters] = useState([]);\n    const [filteredItems, setFilteredItems] = useState(items);  \n  \n    const getVideoCard = useCallback(async()=> {\n        const response = await fetch(\n          'http://localhost:8080/videocard',\n          {\n            method: 'POST',\n            headers:{\n              \"Content-Type\":'application/json'\n            },\n            body: JSON.stringify({\n              \"Price\": [Number(minPrice) ,Number(maxPrice)],\n              \"Videomemory_type\": selectedFilters.length !== 0 ? selectedFilters : \"\"\n            })\n          }\n        )\n        const jsonData = await response.json()\n        return jsonData.Page_data\n      }, [minPrice, maxPrice, selectedFilters]);    \n\n    const handleFilterButtonClick = (selectedCategory) => {\n      if (selectedFilters.includes(selectedCategory)) {\n        let filters = selectedFilters.filter((el) => el !== selectedCategory);\n        setSelectedFilters(filters);\n      } else {\n        setSelectedFilters([...selectedFilters, selectedCategory]);\n      }\n    };\n  \n    useEffect(() => {\n        // Всередині цієї функції ви можете викликати вашу асинхронну функцію\n        if (check !== 8){\n        async function fetchData() {\n          try {\n            const response123 = await getVideoCard();\n            setFilteredItems(response123); // Встановлюємо отримані дані у стан\n          } catch (error) {\n            console.error('Ошибка при загрузке данных:', error);\n          }\n        }\n        fetchData();\n        setCheck(c => c + 1)\n        }\n        // console.log(filteredItems)\n    }, [check, getVideoCard]); \n\n    \n    useEffect(() => {\n    //   filterItems();\n    async function fetchData() {\n        try {\n          const response123 = await getVideoCard();\n          setFilteredItems(response123); // Встановлюємо отримані дані у стан\n        } catch (error) {\n          console.error('Помилка при завантаженні даних:', error);\n        }\n      }\n      fetchData();\n    }, [getVideoCard, isLoading]);\n\n\n    return (\n        <div className={active ? \"modal active\" : \"modal\"} onClick={() => setActive(false)}>\n            <div className={active ? \"modal__content active\" : \"modal__content\"} onClick={e => e.stopPropagation()}>\n                <div className=\"buttons-container\">\n                    <div>\n                      <p>Вартість</p>\n                      <input \n                        type=\"number\"\n                        value={minPrice}\n                        onChange={e => setMinPrice(e.target.value)}\n                      />\n                      <input \n                        type=\"number\"\n                        value={maxPrice}\n                        onChange={e => setMaxPrice(e.target.value)}\n                      />      \n                    </div>             \n                    <p>Тип памʼяті відеокарти:</p>\n                      <div>\n                          <input \n                              type=\"checkbox\"\n                              name=\"GDDR2\"\n                              id=\"GDDR2\"\n                              onChange={() => handleFilterButtonClick(\"GDDR2\")}\n                              checked={selectedFilters.includes(\"GDDR2\")}\n                          />\n                          <label htmlFor=\"GDDR2\">GDDR2</label>\n                      </div>\n                      <div>\n                          <input \n                              type=\"checkbox\"\n                              id=\"GDDR3\"\n                              name=\"GDDR3\"\n                              onChange={() => handleFilterButtonClick(\"GDDR3\")} \n                              checked={selectedFilters.includes(\"GDDR3\")}\n                          />\n                          <label htmlFor=\"GDDR3\">GDDR3</label>\n                      </div>\n                      <div>\n                          <input \n                              type=\"checkbox\"\n                              id=\"GDDR5\"\n                              name=\"GDDR5\"\n                              onChange={() => handleFilterButtonClick(\"GDDR5\")} \n                              checked={selectedFilters.includes(\"GDDR5\")}\n                          />\n                          <label htmlFor=\"GDDR5\">GDDR5</label>\n                      </div>\n                      <div>\n                          <input \n                              type=\"checkbox\"\n                              id=\"GDDR5X\"\n                              name=\"GDDR5X\"\n                              onChange={() => handleFilterButtonClick(\"GDDR5X\")} \n                              checked={selectedFilters.includes(\"GDDR5X\")}\n                          />\n                          <label htmlFor=\"GDDR5X\">GDDR5X</label>\n                      </div>\n                      <div>\n                          <input \n                              type=\"checkbox\"\n                              id=\"GDDR6\"\n                              name=\"GDDR6\"\n                              onChange={() => handleFilterButtonClick(\"GDDR6\")}\n                              checked={selectedFilters.includes(\"GDDR6\")}\n                          />\n                          <label htmlFor=\"GDDR6\">GDDR6</label>\n                      </div>\n                      <div>\n                          <input \n                              type=\"checkbox\"\n                              id=\"GDDR6X\"\n                              name=\"GDDR6X\"\n                              onChange={() => handleFilterButtonClick(\"GDDR6X\")}\n                              checked={selectedFilters.includes(\"GDDR6X\")}\n                          />\n                          <label htmlFor=\"GDDR6X\">GDDR6X</label>\n                      </div>\n                </div>\n                <div className='scroll'>\n                    <VueGPU items={filteredItems} parentCallback={parentCallback}/>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ModalGPU;"],"names":["VueGPU","_ref","items","parentCallback","_jsx","children","map","item","_jsxs","className","src","img","alt","name","videomemory_type","power","price","onClick","id","active","setActive","isLoading","check","setCheck","useState","minPrice","setMinPrice","maxPrice","setMaxPrice","selectedFilters","setSelectedFilters","filteredItems","setFilteredItems","getVideoCard","useCallback","async","response","fetch","method","headers","body","JSON","stringify","Number","length","json","Page_data","handleFilterButtonClick","selectedCategory","includes","filters","filter","el","useEffect","fetchData","response123","error","console","c","e","stopPropagation","type","value","onChange","target","checked","htmlFor"],"sourceRoot":""}